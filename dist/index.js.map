{"version":3,"file":"index.js","sources":["../src/helpers/promise-middleware.ts","../src/helpers/cache.ts","../src/hooks/useApiRequest/index.ts","../src/index.ts"],"sourcesContent":["export type MiddlewareType<T = any> = (res: T) => void;\n\nexport const setPromiseMiddleware = async (\n  promise: Promise<any>,\n  middleware: MiddlewareType[]\n) => {\n  const result = await promise;\n  for (const middlewareItem of middleware) await middlewareItem(result);\n  return result;\n};\n","interface CacheValue {\n  value: any;\n  date: Date;\n}\n\ninterface StorageService<K = string, T = any> {\n  set: (key: K, value: T) => void;\n  get: (key: K) => T | undefined;\n  delete: (key: K) => void;\n}\n\nconst CACHE_MAX_AGE = 100 * 60 * 60 * 5;\n\nexport const getCacheKey = (name: string, token?: string) => {\n  return name + token;\n};\n\nexport const getCache = (name: string, token?: string, cacheMaxAge?: number): any => {\n  const key = getCacheKey(name, token);\n  return cacheService.get(key, cacheMaxAge);\n};\n\nexport const setCache = (name: string, value: any, token?: string) => {\n  const key = getCacheKey(name, token);\n  return cacheService.set(key, value);\n};\n\nconst LocalStorageService: StorageService<string, CacheValue> = {\n  set: (key: string, value: CacheValue) => {\n    if (!localStorage) return;\n    localStorage.setItem(key, JSON.stringify(value));\n  },\n  get: (key: string) => {\n    if (!localStorage) return undefined;\n    const value = localStorage.getItem(key);\n    if (!value) return undefined;\n    return JSON.parse(value) as CacheValue;\n  },\n  delete: (key: string) => {\n    if (!localStorage) return;\n    localStorage.removeItem(key);\n  }\n};\n\nconst isValidDate = (cacheValueDate: Date, cacheMaxAge: number = CACHE_MAX_AGE) => {\n  const currentDate = new Date();\n  return +currentDate - +new Date(cacheValueDate) <= cacheMaxAge;\n};\n\nclass CacheService {\n  private cache: StorageService<string, CacheValue>;\n\n  constructor(service: StorageService<string, CacheValue>) {\n    this.cache = service;\n  }\n\n  set(key: string, value: any) {\n    const cacheData: CacheValue = {\n      value,\n      date: new Date()\n    };\n    this.cache.set(key, cacheData);\n  }\n\n  get(key: string, cacheMaxAge?: number) {\n    const cacheValue = this.cache.get(key);\n    if (!cacheValue) return undefined;\n    if (!isValidDate(cacheValue.date, cacheMaxAge)) {\n      this.cache.delete(key);\n      return undefined;\n    }\n    return cacheValue.value;\n  }\n}\n\nconst currentStorageService: StorageService<string, CacheValue> =\n  typeof window === 'undefined' ? new Map() : LocalStorageService;\nexport const cacheService = new CacheService(currentStorageService);\n","import { useEffect, useState } from \"react\";\nimport { MiddlewareType, setPromiseMiddleware } from \"../../helpers/promise-middleware\";\nimport { getCache, setCache } from '../../helpers/cache';\n\nexport type API_REQUEST_STATUS = \"WAIT\" | \"PENDING\" | \"SUCCESS\" | \"FAIL\";\n\ntype TNullValue = undefined;\nexport const nullValue = undefined;\n\ntype TRequest<T> = Promise<T>;\n\nexport interface TUseApiRequestProps<T = any> {\n  cacheMaxAge?: number;\n  alertService?: IAlertService;\n  getErrorMessageCallback?: (error: any) => string;\n  fetchOnMountData?: any;\n  request: (...args: any) => TRequest<T>;\n  defaultData?: T;\n  catchCallback?: (error: any) => void;\n  successMessage?: string;\n  middleware?: MiddlewareType[];\n  fetchOnMount?: boolean;\n  token?: string;\n  name?: string;\n  cache?: boolean;\n  interval?: number;\n}\n\nexport interface TUseApiRequestOutput<T> {\n  setData: (data: T | TNullValue) => void;\n  status: API_REQUEST_STATUS;\n  errorMessage: string;\n  isPending: boolean;\n  data: T | TNullValue;\n  sendRequest: (props?: any) => TRequest<any>;\n  cleanErrorMessage: () => void;\n}\n\nexport interface IAlert {\n  content: string;\n  title?: string;\n  image?: string;\n  color?: string;\n}\n\nexport interface IAlertService {\n  successAlert: (alert: IAlert) => void;\n  warningAlert: (alert: IAlert) => void;\n  errorAlert: (alert: IAlert) => void;\n}\n\nconst defaultGetErrorMessageCallback = (errorMessage: string) => errorMessage;\n\nconst useApiRequest = <T extends any>({\n  cacheMaxAge,\n  interval,\n  token,\n  name,\n  cache,\n  alertService,\n  getErrorMessageCallback = defaultGetErrorMessageCallback,\n  fetchOnMountData,\n  fetchOnMount,\n  middleware = [],\n  successMessage,\n  request,\n  defaultData,\n  catchCallback,\n}: TUseApiRequestProps<T>): TUseApiRequestOutput<T> => {\n  const [status, setStatus] = useState<API_REQUEST_STATUS>('WAIT');\n  const [data, setData] = useState<T | TNullValue>(defaultData || nullValue);\n  const [errorMessage, setErrorMessageState] = useState<string>(\"\");\n  const setErrorMessage = (error: any) =>\n    setErrorMessageState(getErrorMessageCallback(error));\n  const cleanErrorMessage = () => setErrorMessageState(\"\");\n\n  const [isPending, setIsPending] = useState<boolean>(false);\n\n  const sendSuccessMessage = (res: any) => {\n    if (successMessage && alertService)\n      alertService.successAlert({ content: successMessage });\n    setStatus(\"SUCCESS\");\n    return res;\n  };\n\n  const setCacheMiddleware = (res: any) => {\n    if (cache && name) setCache(name, res, token);\n    return res;\n  };\n\n  const middlewareList: MiddlewareType[] = [\n    ...middleware,\n    setCacheMiddleware,\n    setData,\n    cleanErrorMessage,\n    sendSuccessMessage\n  ];\n\n  const sendFetchRequest = (request: TRequest<T>) => {\n    setIsPending(true);\n    setStatus(\"PENDING\");\n    return ((setPromiseMiddleware(\n      request,\n      middlewareList\n    ) as unknown) as Promise<any>)\n      .catch((error: any) => {\n        const errorMessage = getErrorMessageCallback(error);\n        setStatus(\"FAIL\");\n        setErrorMessage(errorMessage);\n        if (alertService) alertService.errorAlert({ content: errorMessage });\n        catchCallback && catchCallback(error);\n      })\n      .finally(() => {\n        setIsPending(false);\n      }) as TRequest<T>;\n  };\n\n  const sendRequest = (props?: any) => {\n    if (cache && name && !data) {\n      const cacheValue = getCache(name, token, cacheMaxAge);\n      if (cacheValue) sendFetchRequest(Promise.resolve(cacheValue));\n    }\n    return sendFetchRequest(request(props));\n  };\n\n  useEffect(() => {\n    if (fetchOnMount) sendRequest(fetchOnMountData);\n  }, []);\n\n  useEffect(() => {\n    let intervalData: number;\n    const intervalInMs = (interval || 1000) * 1000;\n    if (interval)\n      setTimeout(() => {\n        intervalData = setInterval(() => {\n          sendRequest(fetchOnMountData);\n        }, intervalInMs) as unknown as number;\n      }, intervalInMs);\n    return () => {\n      intervalData && clearInterval(intervalData);\n    };\n  }, [interval]);\n\n  return {\n    setData,\n    status,\n    errorMessage,\n    cleanErrorMessage,\n    isPending,\n    data,\n    sendRequest,\n  };\n};\n\nexport default useApiRequest;\n","import useApiRequest from './hooks/useApiRequest';\nimport { getCache, setCache } from \"./helpers/cache\";\n\nexport default { useApiRequest, getCache, setCache }\n"],"names":["useState","useEffect"],"mappings":"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"}